clear all;
close all;

% load a graph
load ssspdigraph01.mat;
%
% generate adjacency information
[Adj,g] = AdjList(E,n,c,'directed');

% iterate through graph data
run = true;
s   = 17;
while run,
    
    % display current graph
    ptr = PatchGraph(Adj,g,P,...
        'directed',...
        'archdstat',1,... % dynamic changes visible
        'nodenum',s,...
        'nodetextsize',6,...
        'nodemarkersize',10,...
        'edgetxt',E,num2cell(c),... % store in cells (matrices of matrices)
        'archdmu',.9,...
        'edgename','graph');
    
    % solve SSSP problem
    [d,p,T] = SSSP_BF(Adj,g,s);
    
    % if any cycle of negative length has been detected
    if any(d==-inf),
        
        % display cycle
        PatchGraph(T,n,P,...
            'directed',...
            'archdstat',1,...
            'nodenum',s,...
            'nodetextsize',6,...
            'nodemarkersize',10,...
            'edgetxt',E(ismember(E,T)),num2cell(c(ismember(E,T))),... % display only wanted
            'archdmu',.9,...
            'edgecolor','r',...
            'edgewidth',2,...
            'edgename','cycle',...
            'toax',ptr.ax);
        
        % delete any arc of the cycle from the graph
        u        = mod(T(1),n); if u==0, u = n; end;
        v        = (T(1)-u)/n+1;
        Adj(u).v = Adj(u).v(Adj(u).v~=v);
        Adj(u).c = Adj(u).c(Adj(u).v~=v);
        g(1,u)   = g(1,u)-1;
        disp('[-] in pause mode, activate the command window and press any key');
        pause;
    
    % else if no cycle of negative length is reachable from s
    % display the shortest path tree
    else
        run = false;
        PatchGraph(T,n,P,...
            'directed',...
            'archdstat',1,...
            'nodenum',s,...
            'nodetextsize',6,...
            'nodemarkersize',10,...
            'edgetxt',E(ismember(E,T)),num2cell(c(ismember(E,T))),...
            'archdmu',.9,...
            'edgecolor','b',...
            'edgewidth',2,...
            'edgename','shortest path tree',...
            'toax',ptr.ax);
    end;
end;
